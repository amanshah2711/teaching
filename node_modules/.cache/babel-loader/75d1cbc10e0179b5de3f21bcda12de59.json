{"ast":null,"code":"/**\n * Copyright (c) 2019, Chris Oakman\n * Copyright (c) 2019, Justin Fagnani\n * Released under the MIT license\n * https://github.com/justinfagnani/chessboard-element/blob/master/LICENSE.md\n */\nconst RUN_ASSERTS = true;\nexport const isString = s => {\n  return typeof s === 'string';\n};\nexport const isFunction = f => {\n  return typeof f === 'function';\n};\nexport const isInteger = n => {\n  return typeof n === 'number' && isFinite(n) && Math.floor(n) === n;\n};\nexport const deepCopy = thing => {\n  return JSON.parse(JSON.stringify(thing));\n};\nexport const interpolateTemplate = (str, obj) => {\n  for (const [key, value] of Object.entries(obj)) {\n    const keyTemplateStr = '{' + key + '}';\n\n    while (str.includes(keyTemplateStr)) {\n      str = str.replace(keyTemplateStr, value);\n    }\n  }\n\n  return str;\n};\n\nif (RUN_ASSERTS) {\n  console.assert(interpolateTemplate('abc', {\n    a: 'x'\n  }) === 'abc');\n  console.assert(interpolateTemplate('{a}bc', {}) === '{a}bc');\n  console.assert(interpolateTemplate('{a}bc', {\n    p: 'q'\n  }) === '{a}bc');\n  console.assert(interpolateTemplate('{a}bc', {\n    a: 'x'\n  }) === 'xbc');\n  console.assert(interpolateTemplate('{a}bc{a}bc', {\n    a: 'x'\n  }) === 'xbcxbc');\n  console.assert(interpolateTemplate('{a}{a}{b}', {\n    a: 'x',\n    b: 'y'\n  }) === 'xxy');\n}","map":{"version":3,"sources":["../src/lib/utils.ts"],"names":[],"mappings":"AAAA;;;;;;AAOA,MAAM,WAAW,GAAG,IAApB;AAEA,OAAO,MAAM,QAAQ,GAAI,CAAD,IAA4B;AAClD,SAAO,OAAO,CAAP,KAAa,QAApB;AACD,CAFM;AAIP,OAAO,MAAM,UAAU,GAAI,CAAD,IAA8B;AACtD,SAAO,OAAO,CAAP,KAAa,UAApB;AACD,CAFM;AAIP,OAAO,MAAM,SAAS,GAAI,CAAD,IAA4B;AACnD,SAAO,OAAO,CAAP,KAAa,QAAb,IAAyB,QAAQ,CAAC,CAAD,CAAjC,IAAwC,IAAI,CAAC,KAAL,CAAW,CAAX,MAAkB,CAAjE;AACD,CAFM;AAIP,OAAO,MAAM,QAAQ,GAAI,KAAD,IAAmB;AACzC,SAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,KAAf,CAAX,CAAP;AACD,CAFM;AAIP,OAAO,MAAM,mBAAmB,GAAG,CAAC,GAAD,EAAc,GAAd,KAA6B;AAC9D,OAAK,MAAM,CAAC,GAAD,EAAM,KAAN,CAAX,IAA2B,MAAM,CAAC,OAAP,CAAe,GAAf,CAA3B,EAAgD;AAC9C,UAAM,cAAc,GAAG,MAAM,GAAN,GAAY,GAAnC;;AACA,WAAO,GAAG,CAAC,QAAJ,CAAa,cAAb,CAAP,EAAqC;AACnC,MAAA,GAAG,GAAG,GAAG,CAAC,OAAJ,CAAY,cAAZ,EAA4B,KAA5B,CAAN;AACD;AACF;;AACD,SAAO,GAAP;AACD,CARM;;AAUP,IAAI,WAAJ,EAAiB;AACf,EAAA,OAAO,CAAC,MAAR,CAAe,mBAAmB,CAAC,KAAD,EAAQ;AAAC,IAAA,CAAC,EAAE;AAAJ,GAAR,CAAnB,KAAyC,KAAxD;AACA,EAAA,OAAO,CAAC,MAAR,CAAe,mBAAmB,CAAC,OAAD,EAAU,EAAV,CAAnB,KAAqC,OAApD;AACA,EAAA,OAAO,CAAC,MAAR,CAAe,mBAAmB,CAAC,OAAD,EAAU;AAAC,IAAA,CAAC,EAAE;AAAJ,GAAV,CAAnB,KAA2C,OAA1D;AACA,EAAA,OAAO,CAAC,MAAR,CAAe,mBAAmB,CAAC,OAAD,EAAU;AAAC,IAAA,CAAC,EAAE;AAAJ,GAAV,CAAnB,KAA2C,KAA1D;AACA,EAAA,OAAO,CAAC,MAAR,CAAe,mBAAmB,CAAC,YAAD,EAAe;AAAC,IAAA,CAAC,EAAE;AAAJ,GAAf,CAAnB,KAAgD,QAA/D;AACA,EAAA,OAAO,CAAC,MAAR,CAAe,mBAAmB,CAAC,WAAD,EAAc;AAAC,IAAA,CAAC,EAAE,GAAJ;AAAS,IAAA,CAAC,EAAE;AAAZ,GAAd,CAAnB,KAAuD,KAAtE;AACD","sourceRoot":"","sourcesContent":["/**\n * Copyright (c) 2019, Chris Oakman\n * Copyright (c) 2019, Justin Fagnani\n * Released under the MIT license\n * https://github.com/justinfagnani/chessboard-element/blob/master/LICENSE.md\n */\nconst RUN_ASSERTS = true;\nexport const isString = (s) => {\n    return typeof s === 'string';\n};\nexport const isFunction = (f) => {\n    return typeof f === 'function';\n};\nexport const isInteger = (n) => {\n    return typeof n === 'number' && isFinite(n) && Math.floor(n) === n;\n};\nexport const deepCopy = (thing) => {\n    return JSON.parse(JSON.stringify(thing));\n};\nexport const interpolateTemplate = (str, obj) => {\n    for (const [key, value] of Object.entries(obj)) {\n        const keyTemplateStr = '{' + key + '}';\n        while (str.includes(keyTemplateStr)) {\n            str = str.replace(keyTemplateStr, value);\n        }\n    }\n    return str;\n};\nif (RUN_ASSERTS) {\n    console.assert(interpolateTemplate('abc', { a: 'x' }) === 'abc');\n    console.assert(interpolateTemplate('{a}bc', {}) === '{a}bc');\n    console.assert(interpolateTemplate('{a}bc', { p: 'q' }) === '{a}bc');\n    console.assert(interpolateTemplate('{a}bc', { a: 'x' }) === 'xbc');\n    console.assert(interpolateTemplate('{a}bc{a}bc', { a: 'x' }) === 'xbcxbc');\n    console.assert(interpolateTemplate('{a}{a}{b}', { a: 'x', b: 'y' }) === 'xxy');\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}